# Generated by Django 4.2.20 on 2025-03-14 14:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('phone_number', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=128)),
                ('verification_status', models.CharField(choices=[('UNVERIFIED', 'Unverified'), ('PENDING', 'Pending Verification'), ('VERIFIED', 'Verified')], default='UNVERIFIED', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField()),
                ('discount_type', models.CharField(choices=[('PERCENTAGE', 'Percentage'), ('FIXED', 'Fixed Amount')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('min_purchase_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField()),
                ('usage_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Offer',
                'verbose_name_plural': 'Offers',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('source', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('distance_km', models.DecimalField(decimal_places=2, max_digits=8)),
                ('estimated_duration_minutes', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Vehicle Type',
                'verbose_name_plural': 'Vehicle Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VehicleSubtype',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('default_rows', models.PositiveIntegerField(default=15, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('default_columns', models.PositiveIntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('rate_per_km', models.DecimalField(decimal_places=2, help_text='Base rate per kilometer', max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('min_price', models.DecimalField(decimal_places=2, help_text='Minimum price regardless of distance', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('has_ac', models.BooleanField(default=True)),
                ('has_wifi', models.BooleanField(default=False)),
                ('has_entertainment', models.BooleanField(default=False)),
                ('has_charging_ports', models.BooleanField(default=False)),
                ('has_reclining_seats', models.BooleanField(default=False)),
                ('subtype_code', models.CharField(help_text='Code used in Vehicle.subtype field', max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtypes', to='bus_management.vehicletype')),
            ],
            options={
                'verbose_name': 'Vehicle Subtype',
                'verbose_name_plural': 'Vehicle Subtypes',
                'ordering': ['vehicle_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=50, unique=True)),
                ('row_count', models.PositiveIntegerField(help_text='Number of regular rows (excluding back row)')),
                ('has_back_row', models.BooleanField(default=True, help_text='Whether the vehicle has a back row of 5 seats')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('MAINTENANCE', 'Under Maintenance'), ('INACTIVE', 'Inactive'), ('RESERVED', 'Specially Reserved')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_subtype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='bus_management.vehiclesubtype', verbose_name='Vehicle Subtype')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SpecialReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('distance_km', models.DecimalField(decimal_places=2, max_digits=8)),
                ('departure_time', models.DateTimeField()),
                ('estimated_arrival_time', models.DateTimeField()),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('distance_surcharge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('time_surcharge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('demand_surcharge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('REQUESTED', 'Requested'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled'), ('COMPLETED', 'Completed')], default='REQUESTED', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_reservations', to='bus_management.customer')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_reservations', to='bus_management.vehicle')),
            ],
            options={
                'verbose_name': 'Special Reservation',
                'verbose_name_plural': 'Special Reservations',
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('row_number', models.PositiveIntegerField()),
                ('seat_group', models.CharField(choices=[('A', 'Group A - Window Side'), ('B', 'Group B - Aisle Side'), ('BACK', 'Back Row')], max_length=5)),
                ('position', models.PositiveIntegerField(blank=True, null=True)),
                ('seat_type', models.CharField(choices=[('WINDOW', 'Window'), ('AISLE', 'Aisle'), ('BACK', 'Back Row')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='bus_management.vehicle')),
            ],
            options={
                'verbose_name': 'Seat',
                'verbose_name_plural': 'Seats',
                'unique_together': {('vehicle', 'row_number', 'seat_group', 'position')},
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('departure_time', models.DateTimeField()),
                ('arrival_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('DELAYED', 'Delayed')], default='SCHEDULED', max_length=20)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='bus_management.route')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='bus_management.vehicle')),
            ],
            options={
                'verbose_name': 'Schedule',
                'verbose_name_plural': 'Schedules',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('RESERVED', 'Reserved'), ('CONFIRMED', 'Confirmed'), ('CANCELLED', 'Cancelled'), ('COMPLETED', 'Completed')], default='RESERVED', max_length=20)),
                ('booking_time', models.DateTimeField(auto_now_add=True)),
                ('cancellation_time', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='bus_management.customer')),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='bus_management.offer')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='bus_management.schedule')),
                ('seat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='bus_management.seat')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
                'unique_together': {('schedule', 'seat')},
            },
        ),
        migrations.CreateModel(
            name='SeatAvailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('RESERVED', 'Reserved'), ('BOOKED', 'Booked'), ('UNAVAILABLE', 'Unavailable')], default='AVAILABLE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seat_availabilities', to='bus_management.schedule')),
                ('seat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='bus_management.seat')),
            ],
            options={
                'verbose_name': 'Seat Availability',
                'verbose_name_plural': 'Seat Availabilities',
                'unique_together': {('schedule', 'seat')},
            },
        ),
    ]
